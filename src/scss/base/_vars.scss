// ========== css-переменные ========== //

// Возможно, лучше использовать css-переменные, а не scss. Тогда, к примеру, в будущем можно очень легко на всем сайте поменять цвет, который применяется во множестве мест. Они удобны для переключения между светлой и темной темами сайта. Пример использования css-переменных:

:root {
  --white: #fff;
  --primary: #ff5a30;
  --success: #03cea4;
  --danger: #ff4242;
  --warning: #f89828;
  --info: #5a87fc;
  --gray-900: #1e212c;
  --gray-800: #424551;
  --gray-700: #787a80;
  --gray-600: #9a9ca5;
  --gray-500: #b3b7bc;
  --gray-400: #d7dadd;
  --gray-300: #e5e8ed;
  --gray-200: #f4f5f6;
  --gray-100: #f9f9f9;
  --font-family: "Ubuntu", sans-serif;
  --second-family: "Lato", sans-serif;
  // самые частые font-size, font-family, font-weight, line-height вставляем в body без переменных. Но font-family можно занести в переменные.
}

// .block {
// color: var(--main-color);
// }

// ========== scss-переменные ========== //

// $mainColor - поменять на самый частый цвет в макете
// $mainColor: #000;
// $maxWidth - размер max-width для __container. Поменять на тот, что по макету
// $maxWidth: 1280px;

// $maxWidth - размер max-width для __container. Поменять на тот, что по макету
$maxWidthPx: 1260; // Это ширина в пикселях, но пишем без пикселей, чтобы пересчитать в ремы
$minWidthPx: 320;

// Если хотим maxWidth и minWidth в ремах, то пишем следующее:
$maxWidth: calc($maxWidthPx / 16 * 1rem);
$minWidth: calc($minWidthPx / 16 * 1rem);

// maxWidth и minWidth в ремах, но без единиц измерения (используется в формуле для адаптивных свойств):

$maxWidthRemWithout: calc($maxWidthPx / 16);
$minWidthRemWithout: calc($minWidthPx / 16);
// То есть будет, к примеру, не 2.25rem, а 2.25

//--------------------------//

// ============ Брейкпонты в пикселях ========== //

// $deskMiddle: 1399.98px;
// $desk: 1199.98px;
// $tablet: 991.98px;
// $mobile: 767.98px;
// $mobileMiddle: 575.98px;
// $mobileSmall: 479.98px;

// ============ Брейкпонты в ремах ========== //
// Для медиазапросов.
// Эти брейкпойнты - для desktop first. Если делаем верстку mobile first, то брейкпойнты другие - без дробей (992px, 768px и т.д.).

$deskMiddle: calc(1399.98 / 16 * 1rem); // 87.49875rem
$desk: calc(1199.98 / 16 * 1rem); // 74.99875rem
$tablet: calc(991.98 / 16 * 1rem); // 61.99875rem
$mobile: calc(767.98 / 16 * 1rem); // 47.99875rem
$mobileMiddle: calc(575.98 / 16 * 1rem); // 35.99875rem
$mobileSmall: calc(479.98 / 16 * 1rem); // 29.99875rem

// Брейкпойнты в ремах без ремов (без единиц измерения). Без дробей
// Для адаптивных свойств

$deskMiddleRemWithout: calc(1400 / 16);
$deskRemWithout: calc(1200 / 16);
$tabletRemWithout: calc(992 / 16);
$mobileRemWithout: calc(768 / 16);
$mobileMiddleRemWithout: calc(576 / 16);
$mobileSmallRemWithout: calc(480 / 16);
